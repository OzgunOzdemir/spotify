{"ast":null,"code":"var _jsxFileName = \"/Users/ozgunozdemir/Desktop/gitlab/spotify/src/containers/Tracks/Tracks.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { updateAudioPlayer } from '../../redux/actions/index';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getTracksByPlayList, getPlayList } from '../../services';\nimport queryString from 'query-string';\nimport Button from '../../components/Ui/Button/Button';\nimport Loading from '../../components/Ui/Loading/Loading';\nimport { Helmet } from \"react-helmet\";\n\nclass Tracks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const token = sessionStorage.getItem(\"access_token\");\n      const values = queryString.parse(this.props.location.search);\n      const tracks = await getTracksByPlayList(token, values.id);\n      const playList = await getPlayList(token, values.id);\n      this.setState({\n        tracks: tracks.data,\n        sectionPlaylist: playList.data,\n        loadingShow: false\n      });\n    };\n\n    this.playHandler = item => {\n      const audioPlayer = {\n        play: true,\n        url: item.track.preview_url,\n        imageUrl: item.track.album.images[2].url,\n        name: item.track.name,\n        artist: item.track.artists[0].name\n      };\n      this.props.onUpdateAudioPlayer(audioPlayer);\n      this.setState({\n        curentAuidoPlayer: {\n          name: audioPlayer.name\n        }\n      });\n    };\n\n    this.onPlayList = () => {\n      const audioPlayer = {\n        play: true,\n        url: this.state.tracks.items[0].track.preview_url,\n        imageUrl: this.state.tracks.items[0].track.album.images[2].url,\n        name: this.state.tracks.items[0].track.name,\n        artist: this.state.tracks.items[0].track.artists[0].name\n      };\n      this.props.onUpdateAudioPlayer(audioPlayer);\n      this.setState({\n        curentAuidoPlayer: {\n          name: audioPlayer.name\n        }\n      });\n    };\n\n    this.state = {\n      tracks: {},\n      sectionPlaylist: {},\n      curentAuidoPlayer: {\n        name: null\n      },\n      loadingShow: true\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.loadingShow === false ? React.createElement(\"div\", {\n      className: \"PageContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SongsContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Helmet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.curentAuidoPlayer.name ? this.state.curentAuidoPlayer.name : \"Spotify\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 col-md-12 col-xl-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.sectionPlaylist.images ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SongPlaylist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SongImageContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.sectionPlaylist.images[0].url,\n      alt: \"PlayList\",\n      className: \"SongImage pointer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"colorWhite\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.sectionPlaylist.name)), React.createElement(\"div\", {\n      className: \"center mt30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Button, {\n      text: \"Play\",\n      onClick: () => this.onPlayList(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))) : ''), React.createElement(\"div\", {\n      className: \"col-12 col-md-12 col-xl-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.tracks.items ? this.state.tracks.items.map((item, id) => React.createElement(\"div\", {\n      key: id,\n      className: \"row SongList pointer\",\n      onClick: () => this.playHandler(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-1 col-md-1 right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"SongIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"MusicIcon\",\n      icon: \"music\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"div\", {\n      className: \"col-9 col-md-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: item.track.name === this.props.audioPlayer.name ? 'CurrentSong' : 'SongName',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, item.track.name)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, item.track.artists.map((artist, i) => React.createElement(\"span\", {\n      key: i,\n      className: \"SongBottomName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, artist.name, \", \")), React.createElement(\"span\", {\n      className: \"SongBottomName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"\\xA0 * \", item.track.album.name))), React.createElement(\"div\", {\n      className: \"col-2 col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, (item.track.duration_ms / 60000).toFixed(2))))) : '')))) : React.createElement(Loading, {\n      show: this.state.loadingShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    audioPlayer: state.audioPlayer\n  };\n};\n\nconst mapDispatchToProps = {\n  onUpdateAudioPlayer: updateAudioPlayer\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Tracks);","map":{"version":3,"sources":["/Users/ozgunozdemir/Desktop/gitlab/spotify/src/containers/Tracks/Tracks.js"],"names":["React","Component","Fragment","connect","updateAudioPlayer","FontAwesomeIcon","getTracksByPlayList","getPlayList","queryString","Button","Loading","Helmet","Tracks","constructor","props","componentDidMount","token","sessionStorage","getItem","values","parse","location","search","tracks","id","playList","setState","data","sectionPlaylist","loadingShow","playHandler","item","audioPlayer","play","url","track","preview_url","imageUrl","album","images","name","artist","artists","onUpdateAudioPlayer","curentAuidoPlayer","onPlayList","state","items","render","map","i","duration_ms","toFixed","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport { connect } from 'react-redux';\nimport { updateAudioPlayer } from '../../redux/actions/index';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { getTracksByPlayList, getPlayList } from '../../services'\nimport queryString from 'query-string';\nimport Button from '../../components/Ui/Button/Button';\nimport Loading from '../../components/Ui/Loading/Loading';\nimport { Helmet } from \"react-helmet\";\n\nclass Tracks extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            tracks: {},\n            sectionPlaylist: {},\n            curentAuidoPlayer: {\n                name: null,\n            },\n            loadingShow: true\n        }\n    }\n\n    componentDidMount = async () => {\n        const token = sessionStorage.getItem(\"access_token\");\n        const values = queryString.parse(this.props.location.search);\n        const tracks = await getTracksByPlayList(token, values.id);\n        const playList = await getPlayList(token, values.id);\n        this.setState({\n            tracks: tracks.data,\n            sectionPlaylist: playList.data,\n            loadingShow: false\n        })\n    }\n\n    playHandler = (item) => {\n        const audioPlayer = {\n            play: true,\n            url: item.track.preview_url,\n            imageUrl: item.track.album.images[2].url,\n            name: item.track.name,\n            artist: item.track.artists[0].name\n        }\n        this.props.onUpdateAudioPlayer(audioPlayer);\n        this.setState({\n            curentAuidoPlayer: {\n                name: audioPlayer.name\n            }\n        })\n    }\n\n    onPlayList = () => {\n        const audioPlayer = {\n            play: true,\n            url: this.state.tracks.items[0].track.preview_url,\n            imageUrl: this.state.tracks.items[0].track.album.images[2].url,\n            name: this.state.tracks.items[0].track.name,\n            artist: this.state.tracks.items[0].track.artists[0].name\n        }\n        this.props.onUpdateAudioPlayer(audioPlayer);\n        this.setState({\n            curentAuidoPlayer: {\n                name: audioPlayer.name\n            }\n        })\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {\n                    this.state.loadingShow === false ?\n                        <div className=\"PageContainer\">\n                            <div className=\"SongsContainer\">\n                                <Helmet>\n                                    <title>{this.state.curentAuidoPlayer.name ? this.state.curentAuidoPlayer.name : \"Spotify\"}</title>\n                                </Helmet>\n                                <div className=\"row\">\n                                    <div className=\"col-12 col-md-12 col-xl-4\">\n                                        {\n                                            this.state.sectionPlaylist.images ?\n                                                <Fragment>\n                                                    <div className=\"SongPlaylist\">\n                                                        <div className=\"SongImageContainer\">\n                                                            <img src={this.state.sectionPlaylist.images[0].url} alt=\"PlayList\" className=\"SongImage pointer\" /><br />\n                                                        </div>\n                                                        <div className=\"colorWhite\">{this.state.sectionPlaylist.name}</div>\n                                                    </div>\n                                                    <div className=\"center mt30\">\n                                                        <Button text=\"Play\" onClick={() => this.onPlayList()} />\n                                                    </div>\n                                                </Fragment>\n                                                :\n                                                ''\n                                        }\n                                    </div>\n                                    <div className=\"col-12 col-md-12 col-xl-8\">\n                                        {\n                                            this.state.tracks.items ?\n                                                this.state.tracks.items.map((item, id) =>\n                                                    <div key={id} className=\"row SongList pointer\" onClick={() => this.playHandler(item)}>\n                                                        <div className=\"col-1 col-md-1 right\">\n                                                            <span className=\"SongIcon\"><FontAwesomeIcon className=\"MusicIcon\" icon=\"music\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                                                        </div>\n                                                        <div className=\"col-9 col-md-9\">\n                                                            <div>\n                                                                <span className={(item.track.name === this.props.audioPlayer.name ? 'CurrentSong' : 'SongName')}>{item.track.name}</span>\n                                                            </div>\n                                                            <div>\n                                                                {\n                                                                    item.track.artists.map((artist, i) =>\n                                                                        <span key={i} className=\"SongBottomName\">{artist.name}, </span>\n                                                                    )\n                                                                }\n                                                                <span className=\"SongBottomName\">&nbsp; * {item.track.album.name}</span>\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"col-2 col-md-2\">\n                                                            <span>{(item.track.duration_ms / 60000).toFixed(2)}</span>\n                                                        </div>\n                                                    </div>\n                                                )\n                                                :\n                                                ''\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        </div> : <Loading show={this.state.loadingShow} />\n                }\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return ({\n        audioPlayer: state.audioPlayer\n    });\n}\n\nconst mapDispatchToProps = {\n    onUpdateAudioPlayer: updateAudioPlayer,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Tracks);\n"]},"metadata":{},"sourceType":"module"}
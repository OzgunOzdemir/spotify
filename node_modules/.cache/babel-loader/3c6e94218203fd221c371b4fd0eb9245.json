{"ast":null,"code":"var _jsxFileName = \"/Users/ozgunozdemir/Desktop/gitlab/spotify/src/containers/Categories/Categories.js\";\nimport React, { Component, Fragment } from 'react';\nimport { getListCategories } from '../../services/index';\nimport Category from '../../components/Ui/Category/Category';\nimport Loading from '../../components/Ui/Loading/Loading';\n\nclass Categories extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const token = sessionStorage.getItem(\"access_token\"); // get categories\n\n      const getCategories = await getListCategories(token);\n      this.setState({\n        categories: getCategories.data,\n        loadingShow: false\n      });\n    };\n\n    this.handlerPlaylistspage = item => {\n      let queryString = \"category_id=\" + item.id;\n      this.props.history.push(\"/playlists?\".concat(queryString));\n    };\n\n    this.state = {\n      categories: {},\n      access_token: null,\n      loadingShow: true\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.loadingShow === false ? React.createElement(\"div\", {\n      className: \"PageContainer container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"PageTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"PageTitleText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Categories\")), React.createElement(\"div\", {\n      className: \"PageContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.categories.items ? this.state.categories.items.map((item, i) => React.createElement(Category, {\n      item: item,\n      key: i,\n      onClick: () => this.handlerPlaylistspage(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })) : ''))) : React.createElement(Loading, {\n      show: this.state.loadingShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Categories;","map":{"version":3,"sources":["/Users/ozgunozdemir/Desktop/gitlab/spotify/src/containers/Categories/Categories.js"],"names":["React","Component","Fragment","getListCategories","Category","Loading","Categories","constructor","props","componentDidMount","token","sessionStorage","getItem","getCategories","setState","categories","data","loadingShow","handlerPlaylistspage","item","queryString","id","history","push","state","access_token","render","items","map","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAE/BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAUnBC,iBAVmB,GAUC,YAAY;AAC5B,YAAMC,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,cAAvB,CAAd,CAD4B,CAE5B;;AACA,YAAMC,aAAa,GAAG,MAAMV,iBAAiB,CAACO,KAAD,CAA7C;AACA,WAAKI,QAAL,CAAc;AACVC,QAAAA,UAAU,EAAEF,aAAa,CAACG,IADhB;AAEVC,QAAAA,WAAW,EAAE;AAFH,OAAd;AAIH,KAlBkB;;AAAA,SAoBnBC,oBApBmB,GAoBKC,IAAD,IAAU;AAC7B,UAAIC,WAAW,GAAG,iBAAiBD,IAAI,CAACE,EAAxC;AACA,WAAKb,KAAL,CAAWc,OAAX,CAAmBC,IAAnB,sBAAsCH,WAAtC;AACH,KAvBkB;;AAGf,SAAKI,KAAL,GAAa;AACTT,MAAAA,UAAU,EAAE,EADH;AAETU,MAAAA,YAAY,EAAE,IAFL;AAGTR,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAKH;;AAiBDS,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKF,KAAL,CAAWP,WAAX,KAA2B,KAA3B,GAEI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKO,KAAL,CAAWT,UAAX,CAAsBY,KAAtB,GACI,KAAKH,KAAL,CAAWT,UAAX,CAAsBY,KAAtB,CAA4BC,GAA5B,CAAgC,CAACT,IAAD,EAAOU,CAAP,KAC5B,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEV,IAAhB;AAAsB,MAAA,GAAG,EAAEU,CAA3B;AAA8B,MAAA,OAAO,EAAE,MAAM,KAAKX,oBAAL,CAA0BC,IAA1B,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,GAGQ,EALhB,CADJ,CAJJ,CAFJ,GAgBa,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE,KAAKK,KAAL,CAAWP,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBrB,CADJ;AAuBH;;AAnD8B;;AAsDnC,eAAeX,UAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport { getListCategories } from '../../services/index';\nimport Category from '../../components/Ui/Category/Category';\nimport Loading from '../../components/Ui/Loading/Loading';\n\nclass Categories extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            categories: {},\n            access_token: null,\n            loadingShow: true\n        }\n    }\n\n    componentDidMount = async () => {\n        const token = sessionStorage.getItem(\"access_token\");\n        // get categories\n        const getCategories = await getListCategories(token);\n        this.setState({\n            categories: getCategories.data,\n            loadingShow: false\n        })\n    }\n\n    handlerPlaylistspage = (item) => {\n        let queryString = \"category_id=\" + item.id;\n        this.props.history.push(`/playlists?${queryString}`);\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {\n                    this.state.loadingShow === false ?\n\n                        <div className=\"PageContainer container\">\n                            <div className=\"PageTitle\">\n                                <span className=\"PageTitleText\">Categories</span>\n                            </div>\n                            <div className=\"PageContent\">\n                                <div className=\"row\">\n                                    {\n                                        this.state.categories.items ?\n                                            this.state.categories.items.map((item, i) =>\n                                                <Category item={item} key={i} onClick={() => this.handlerPlaylistspage(item)} />\n                                            ) : ''\n                                    }\n                                </div>\n                            </div>\n                        </div> : <Loading show={this.state.loadingShow} />\n                }\n            </Fragment>\n        )\n    }\n}\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}
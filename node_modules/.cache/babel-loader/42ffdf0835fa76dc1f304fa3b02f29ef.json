{"ast":null,"code":"var _jsxFileName = \"/Users/ozgunozdemir/Desktop/gitlab/spotify/src/containers/Albums/Albums.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { updateAudioPlayer } from '../../redux/actions/index';\nimport { getAlbumsById, getTracksByAlbums } from '../../services/index';\nimport queryString from 'query-string';\nimport Button from '../../components/Ui/Button/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Loading from '../../components/Ui/Loading/Loading';\nimport { Helmet } from \"react-helmet\";\n\nclass Albums extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const token = sessionStorage.getItem(\"access_token\");\n      const values = queryString.parse(this.props.location.search);\n      const albumsDetail = await getAlbumsById(token, values.id);\n      const albums = await getTracksByAlbums(token, values.id);\n      this.setState({\n        albumsDetail: albumsDetail.data,\n        albums: albums.data,\n        loadingShow: false\n      });\n    };\n\n    this.playHandler = item => {\n      const audioPlayer = {\n        play: true,\n        url: item.preview_url,\n        imageUrl: this.state.albumsDetail.images[2].url,\n        name: item.name,\n        artist: item.artists[0].name\n      };\n      this.props.onUpdateAudioPlayer(audioPlayer);\n      this.setState({\n        curentAuidoPlayer: {\n          name: audioPlayer.name\n        }\n      });\n    };\n\n    this.onPlayList = () => {\n      const audioPlayer = {\n        play: true,\n        url: this.state.albums.items[0].preview_url,\n        imageUrl: this.state.albumsDetail.images[2].url,\n        name: this.state.albums.items[0].name,\n        artist: this.state.albums.items[0].artists[0].name\n      };\n      this.props.onUpdateAudioPlayer(audioPlayer);\n      this.setState({\n        curentAuidoPlayer: {\n          name: audioPlayer.name\n        }\n      });\n    };\n\n    this.state = {\n      albums: {},\n      albumsDetail: {},\n      curentAuidoPlayer: {\n        name: null\n      },\n      loadingShow: true\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.loadingShow === false ? React.createElement(\"div\", {\n      className: \"PageContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SongsContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Helmet, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"title\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.curentAuidoPlayer.name ? this.state.curentAuidoPlayer.name : \"Spotify\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-12 col-md-12 col-xl-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.albumsDetail.images ? React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SongPlaylist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"SongImageContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.albumsDetail.images[0].url,\n      alt: \"PlayList\",\n      className: \"SongImage pointer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"colorWhite\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.albumsDetail.name)), React.createElement(\"div\", {\n      className: \"center mt30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Button, {\n      text: \"Play\",\n      onClick: () => this.onPlayList(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))) : ''), React.createElement(\"div\", {\n      className: \"col-12 col-md-12 col-xl-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.albums.items ? this.state.albums.items.map((item, id) => React.createElement(\"div\", {\n      key: id,\n      className: \"row SongList pointer\",\n      onClick: () => this.playHandler(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-1 col-md-1 right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"SongIcon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      className: \"SongIcon\",\n      icon: \"music\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), \"\\xA0\\xA0\\xA0\\xA0\\xA0\")), React.createElement(\"div\", {\n      className: \"col-9 col-md-9\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: item.name === this.props.audioPlayer.name ? 'CurrentSong' : 'SongName',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, item.name)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, item.artists.map((artist, i) => React.createElement(\"span\", {\n      key: i,\n      className: \"SongBottomName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, artist.name, \", \")))), React.createElement(\"div\", {\n      className: \"col-2 col-md-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, (item.duration_ms / 60000).toFixed(2))))) : '')))) : React.createElement(Loading, {\n      show: this.state.loadingShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    audioPlayer: state.audioPlayer\n  };\n};\n\nconst mapDispatchToProps = {\n  onUpdateAudioPlayer: updateAudioPlayer\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Albums);","map":{"version":3,"sources":["/Users/ozgunozdemir/Desktop/gitlab/spotify/src/containers/Albums/Albums.js"],"names":["React","Component","Fragment","connect","updateAudioPlayer","getAlbumsById","getTracksByAlbums","queryString","Button","FontAwesomeIcon","Loading","Helmet","Albums","constructor","props","componentDidMount","token","sessionStorage","getItem","values","parse","location","search","albumsDetail","id","albums","setState","data","loadingShow","playHandler","item","audioPlayer","play","url","preview_url","imageUrl","state","images","name","artist","artists","onUpdateAudioPlayer","curentAuidoPlayer","onPlayList","items","render","map","i","duration_ms","toFixed","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport { connect } from 'react-redux';\nimport { updateAudioPlayer } from '../../redux/actions/index';\nimport { getAlbumsById, getTracksByAlbums } from '../../services/index';\nimport queryString from 'query-string';\nimport Button from '../../components/Ui/Button/Button';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Loading from '../../components/Ui/Loading/Loading';\nimport { Helmet } from \"react-helmet\";\n\nclass Albums extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            albums: {},\n            albumsDetail: {},\n            curentAuidoPlayer: {\n                name: null,\n            },\n            loadingShow: true\n        }\n    }\n\n    componentDidMount = async () => {\n        const token = sessionStorage.getItem(\"access_token\");\n        const values = queryString.parse(this.props.location.search);\n        const albumsDetail = await getAlbumsById(token, values.id);\n        const albums = await getTracksByAlbums(token, values.id);   \n        this.setState({\n            albumsDetail: albumsDetail.data,\n            albums: albums.data,\n            loadingShow: false\n        })\n    }\n\n    playHandler = (item) => {\n        const audioPlayer = {\n            play: true,\n            url: item.preview_url,\n            imageUrl: this.state.albumsDetail.images[2].url,\n            name: item.name,\n            artist: item.artists[0].name\n        }\n        this.props.onUpdateAudioPlayer(audioPlayer);\n        this.setState({\n            curentAuidoPlayer: {\n                name: audioPlayer.name\n            }\n        })\n    }\n\n    onPlayList = () => {\n        const audioPlayer = {\n            play: true,\n            url: this.state.albums.items[0].preview_url,\n            imageUrl: this.state.albumsDetail.images[2].url,\n            name: this.state.albums.items[0].name,\n            artist: this.state.albums.items[0].artists[0].name\n        }\n        this.props.onUpdateAudioPlayer(audioPlayer);\n        this.setState({\n            curentAuidoPlayer: {\n                name: audioPlayer.name\n            }\n        })\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {\n                    this.state.loadingShow === false ?\n                        <div className=\"PageContainer\">\n                            <div className=\"SongsContainer\">\n                                <Helmet>\n                                    <title>{this.state.curentAuidoPlayer.name ? this.state.curentAuidoPlayer.name : \"Spotify\"}</title>\n                                </Helmet>\n                                <div className=\"row\">\n                                    <div className=\"col-12 col-md-12 col-xl-4\">\n                                        {\n                                            this.state.albumsDetail.images ?\n                                                <Fragment>\n                                                    <div className=\"SongPlaylist\">\n                                                        <div className=\"SongImageContainer\">\n                                                            <img src={this.state.albumsDetail.images[0].url} alt=\"PlayList\" className=\"SongImage pointer\" /><br />\n                                                        </div>\n                                                        <div className=\"colorWhite\">{this.state.albumsDetail.name}</div>\n                                                    </div>\n                                                    <div className=\"center mt30\">\n                                                        <Button text=\"Play\" onClick={() => this.onPlayList()} />\n                                                    </div>\n                                                </Fragment>\n                                                :\n                                                ''\n                                        }\n                                    </div>\n                                    <div className=\"col-12 col-md-12 col-xl-8\">\n                                        {\n                                            this.state.albums.items ?\n                                                this.state.albums.items.map((item, id) =>\n                                                    <div key={id} className=\"row SongList pointer\" onClick={() => this.playHandler(item)}>\n                                                        <div className=\"col-1 col-md-1 right\">\n                                                            <span className=\"SongIcon\"><FontAwesomeIcon className=\"SongIcon\" icon=\"music\" />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                                                        </div>\n                                                        <div className=\"col-9 col-md-9\">\n                                                            <div>\n                                                                <span className={(item.name === this.props.audioPlayer.name ? 'CurrentSong' : 'SongName')}>{item.name}</span>\n                                                            </div>\n                                                            <div>\n                                                                {\n                                                                    item.artists.map((artist, i) =>\n                                                                        <span key={i} className=\"SongBottomName\">{artist.name}, </span>\n                                                                    )\n                                                                }\n                                                            </div>\n                                                        </div>\n                                                        <div className=\"col-2 col-md-2\">\n                                                            <span>{(item.duration_ms / 60000).toFixed(2)}</span>\n                                                        </div>\n                                                    </div>\n                                                )\n                                                :\n                                                ''\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        </div> : <Loading show={this.state.loadingShow} />\n                }\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps =  state => {\n    return({\n        audioPlayer: state.audioPlayer\n    });\n}\n\nconst mapDispatchToProps = {\n    onUpdateAudioPlayer: updateAudioPlayer,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Albums);\n"]},"metadata":{},"sourceType":"module"}
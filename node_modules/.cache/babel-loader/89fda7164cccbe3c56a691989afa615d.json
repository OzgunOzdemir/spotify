{"ast":null,"code":"var _jsxFileName = \"/Users/ozgunozdemir/Desktop/gitlab/spotify/src/containers/Newreleases/Newreleases.js\";\nimport React, { Component, Fragment } from 'react';\nimport { getNewReleases } from '../../services';\nimport Playlist from '../../components/Ui/Playlist/Playlist';\nimport Loading from '../../components/Ui/Loading/Loading';\n\nclass Newreleases extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const token = sessionStorage.getItem(\"access_token\");\n      const getAlbums = await getNewReleases(token);\n      this.setState({\n        albums: getAlbums.data.albums,\n        loadingShow: false\n      });\n    };\n\n    this.handlerTrackspage = item => {\n      let queryString = \"id=\" + item.id;\n      this.props.history.push(\"/albums?\".concat(queryString));\n    };\n\n    this.state = {\n      albums: {},\n      loadingShow: true\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.state.loadingShow === false ? React.createElement(\"div\", {\n      className: \"PageContainer container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"PageTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"PageTitleText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"New Releases albums\")), React.createElement(\"div\", {\n      className: \"PageContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.albums.items ? this.state.albums.items.map((item, i) => React.createElement(Playlist, {\n      item: item,\n      key: i,\n      onClick: () => this.handlerTrackspage(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })) : ''))) : React.createElement(Loading, {\n      show: this.state.loadingShow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Newreleases;","map":{"version":3,"sources":["/Users/ozgunozdemir/Desktop/gitlab/spotify/src/containers/Newreleases/Newreleases.js"],"names":["React","Component","Fragment","getNewReleases","Playlist","Loading","Newreleases","constructor","props","componentDidMount","token","sessionStorage","getItem","getAlbums","setState","albums","data","loadingShow","handlerTrackspage","item","queryString","id","history","push","state","render","items","map","i"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAEhCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,iBATmB,GASC,YAAY;AAC5B,YAAMC,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,cAAvB,CAAd;AACA,YAAMC,SAAS,GAAG,MAAMV,cAAc,CAACO,KAAD,CAAtC;AACA,WAAKI,QAAL,CAAc;AACVC,QAAAA,MAAM,EAAEF,SAAS,CAACG,IAAV,CAAeD,MADb;AAEVE,QAAAA,WAAW,EAAE;AAFH,OAAd;AAIH,KAhBkB;;AAAA,SAkBnBC,iBAlBmB,GAkBEC,IAAD,IAAU;AAC1B,UAAIC,WAAW,GAAG,QAAQD,IAAI,CAACE,EAA/B;AACA,WAAKb,KAAL,CAAWc,OAAX,CAAmBC,IAAnB,mBAAmCH,WAAnC;AACH,KArBkB;;AAGf,SAAKI,KAAL,GAAa;AACTT,MAAAA,MAAM,EAAE,EADC;AAETE,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAIH;;AAgBDQ,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKD,KAAL,CAAWP,WAAX,KAA2B,KAA3B,GACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKO,KAAL,CAAWT,MAAX,CAAkBW,KAAlB,GACI,KAAKF,KAAL,CAAWT,MAAX,CAAkBW,KAAlB,CAAwBC,GAAxB,CAA4B,CAACR,IAAD,EAAOS,CAAP,KACxB,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAET,IAAhB;AAAsB,MAAA,GAAG,EAAES,CAA3B;AAA8B,MAAA,OAAO,EAAE,MAAM,KAAKV,iBAAL,CAAuBC,IAAvB,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,GAGQ,EALhB,CADJ,CAJJ,CADJ,GAea,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAE,KAAKK,KAAL,CAAWP,WAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBrB,CADJ;AAsBH;;AAhD+B;;AAmDpC,eAAeX,WAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\n\nimport { getNewReleases } from '../../services';\nimport Playlist from '../../components/Ui/Playlist/Playlist';\nimport Loading from '../../components/Ui/Loading/Loading';\n\nclass Newreleases extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            albums: {},\n            loadingShow: true\n        }\n    }\n\n    componentDidMount = async () => {\n        const token = sessionStorage.getItem(\"access_token\");\n        const getAlbums = await getNewReleases(token);\n        this.setState({\n            albums: getAlbums.data.albums,\n            loadingShow: false\n        })\n    }\n\n    handlerTrackspage = (item) => {\n        let queryString = \"id=\" + item.id;\n        this.props.history.push(`/albums?${queryString}`);\n    }\n\n    render() {\n        return (\n            <Fragment>\n                {\n                    this.state.loadingShow === false ?\n                        <div className=\"PageContainer container\">\n                            <div className=\"PageTitle\">\n                                <span className=\"PageTitleText\">New Releases albums</span>\n                            </div>\n                            <div className=\"PageContent\">\n                                <div className=\"row\">\n                                    {\n                                        this.state.albums.items ?\n                                            this.state.albums.items.map((item, i) =>\n                                                <Playlist item={item} key={i} onClick={() => this.handlerTrackspage(item)} />\n                                            ) : ''\n                                    }\n                                </div>\n                            </div>\n                        </div> : <Loading show={this.state.loadingShow} />\n                }\n            </Fragment>\n        )\n    }\n}\n\nexport default Newreleases;\n"]},"metadata":{},"sourceType":"module"}